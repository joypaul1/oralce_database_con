CREATE OR REPLACE TRIGGER DEVELOPERS.RML_HR_EMP_TOUR_AT_ACTUAL_PRICE
   BEFORE UPDATE OF TOUR_END_TIME
   ON DEVELOPERS.RML_HR_EMP_TOUR
   FOR EACH ROW
   WHEN (OLD.TOUR_END_TIME IS NULL AND NEW.TOUR_END_TIME IS NOT NULL)
DECLARE
   V_AT_ACTUAL_PRICE           NUMBER;
   V_IS_NIGHT_STAY_FLAG        NUMBER; -- NUMBER(1): 0 or 1
   V_IS_STAY_WITH_FAMILY_FLAG  NUMBER;
   V_TOTAL_DURATION_TIME       VARCHAR2(100);
   V_DESIGNATION               VARCHAR2(100);
   V_DAILY_ALLOWANCE           NUMBER;
   V_TOTAL_TOUR_DAYS_COUNT     NUMBER;
   V_TOUR_BILL                 NUMBER;
   V_FINAL_TA_BILL             NUMBER;
BEGIN
   -- Get tour info
   SELECT NIGHT_STAY,
          STAY_WITH_FAMILY,
          TOTAL_DURATION_TIME,
          DESIGNATION,
          TOTAL_TOUR_DAYS_COUNT
     INTO V_IS_NIGHT_STAY_FLAG,
          V_IS_STAY_WITH_FAMILY_FLAG,
          V_TOTAL_DURATION_TIME,
          V_DESIGNATION,
          V_TOTAL_TOUR_DAYS_COUNT
     FROM DEVELOPERS.RML_HR_EMP_TOUR
    WHERE ID = :NEW.ID;
  DBMS_OUTPUT.PUT_LINE('NIGHT_STAY: ' || V_IS_NIGHT_STAY_FLAG || ', STAY_WITH_FAMILY: ' || V_IS_STAY_WITH_FAMILY_FLAG ||
   ' V_TOTAL_DURATION_TIME: ' || V_TOTAL_DURATION_TIME || ' V_DESIGNATION ' || V_DESIGNATION || ' V_TOTAL_TOUR_DAYS_COUNT ' || V_TOTAL_TOUR_DAYS_COUNT
  
  );
   -- Get standard bill and allowance
   GET_TOUR_DESIGNATION_WISE_BILL(V_DESIGNATION, V_DAILY_ALLOWANCE, V_TOUR_BILL);

   -- Initialize
   V_FINAL_TA_BILL := 0;

   -- Logic: Night stay logic
   IF V_IS_NIGHT_STAY_FLAG = 1 THEN
      IF V_IS_STAY_WITH_FAMILY_FLAG = 1 THEN
         V_TOUR_BILL := CALCULATE_PERCENTAGE(V_TOUR_BILL, 50);  -- 50% of bill
      END IF;
      V_FINAL_TA_BILL := V_TOUR_BILL * V_TOTAL_TOUR_DAYS_COUNT;
   ELSIF V_TOTAL_DURATION_TIME >= '12:00' THEN
      V_FINAL_TA_BILL := V_TOUR_BILL * V_TOTAL_TOUR_DAYS_COUNT;
   ELSE
      V_FINAL_TA_BILL := 0;
   END IF;

   -- Calculate total values
   V_DAILY_ALLOWANCE := V_DAILY_ALLOWANCE * V_TOTAL_TOUR_DAYS_COUNT;
   V_AT_ACTUAL_PRICE := V_FINAL_TA_BILL + V_DAILY_ALLOWANCE;

   -- Set values directly to :NEW for update
   :NEW.TOUR_CEILING_AMOUNT := V_AT_ACTUAL_PRICE;
   :NEW.TA_BILL := V_TOUR_BILL;  -- Changed from V_TOUR_BILL to V_FINAL_TA_BILL
   :NEW.DA_BILL := V_DAILY_ALLOWANCE;

   DBMS_OUTPUT.PUT_LINE('Trigger executed. TA Bill: ' || V_FINAL_TA_BILL || ', Allowance: ' || V_DAILY_ALLOWANCE);
EXCEPTION
   WHEN NO_DATA_FOUND THEN
      DBMS_OUTPUT.PUT_LINE('No data found for ID: ' || :NEW.ID);
   WHEN OTHERS THEN
      DBMS_OUTPUT.PUT_LINE('Error in trigger: ' || SQLERRM);
      RAISE;
END;
/